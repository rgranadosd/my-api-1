name: Deploy OpenAPI to WSO2

on:
  push:
    branches: [ main ]
    paths:
      - 'apis/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install apictl
      run: |
        # URL de descarga para WSO2 API Controller (apictl) v4.3.3 para Linux x64 (amd64)
        # Obtenida de https://github.com/wso2/product-apim-tooling/releases/
        wget https://github.com/wso2/product-apim-tooling/releases/download/v4.3.3/apictl-4.3.3-linux-amd64.tar.gz
        
        # Extraer el contenido del archivo tar.gz. Esto crea un directorio llamado 'apictl'.
        tar -xzf apictl-4.3.3-linux-x64.tar.gz
        
        # Copiar el ejecutable 'apictl' (que está dentro del directorio extraído 'apictl')
        # a /usr/local/bin para que esté disponible en el PATH, y establecer permisos.
        # Se especifica 'apictl/apictl' para apuntar al archivo ejecutable dentro del directorio.
        sudo install -m 755 apictl/apictl /usr/local/bin/apictl

    - name: Add WSO2 Environment
      run: |
        # Configurar el entorno 'dev-env' en apictl.
        # Nota: Usar --insecure en producción no es recomendable.
        apictl add-env -e dev-env \
          --apim https://localhost:9443 \
          --token https://localhost:9443/oauth2/token \
          --insecure

    - name: Login to WSO2 APIM
      run: |
        # Iniciar sesión en el entorno 'dev-env' usando secretos de GitHub para las credenciales.
        # Asegúrate de que APIM_USER y APIM_PASS estén configurados en los secretos de tu repositorio.
        # Nota: Usar --insecure en producción no es recomendable.
        apictl login dev-env -u ${{ secrets.APIM_USER }} -p ${{ secrets.APIM_PASS }} --insecure

    - name: Deploy all OpenAPI definitions
      run: |
        # Iterar sobre los directorios dentro de 'apis/'.
        # Asume que cada API está en su propio subdirectorio, e.g., apis/api-name/version/api.yaml
        for dir in apis/*/*; do
          # Verificar si el archivo api.yaml existe en el subdirectorio actual
          if [ -f "$dir/api.yaml" ]; then
            echo "Importando $dir/api.yaml"
            # Importar la API usando apictl.
            # -f "$dir" especifica la ruta al directorio del proyecto de la API.
            # --update asegura que la API se actualice si ya existe.
            # Nota: Usar --insecure en producción no es recomendable.
            apictl import-api -f "$dir" -e dev-env --update --insecure
          fi
        done