name: API Scoring

on:
  workflow_run:
    workflows: ["Importar APIs (working-copy)"]
    types: [completed]

jobs:
  run-scoring:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      # 1) Clonamos tu repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2) Clonamos el motor de scoring
      - name: Clone scoring engine
        run: |
          git clone --depth 1 https://github.com/rgranadosd/api-scoring-engine.git scoring_engine

      # 3) Build + Up con Docker Compose
      - name: Start scoring engine (Docker Compose)
        working-directory: scoring_engine
        run: |
          docker-compose up --build -d
          echo "⏳ Esperando a que el servicio responda en http://localhost:8088 ..."
          for i in {1..30}; do
            if curl -s http://localhost:8088/ | grep -qiE "api|swagger|health"; then
              echo "✅ Scoring engine listo"; break
            fi
            sleep 5
          done

      # 4) Ejecutamos el scoring sobre tu especificación
      - name: Call scoring API
        id: score
        run: |
          curl -s -X POST -F "file=@openapi-rest.yml;type=text/yaml" \
               http://localhost:8088/apifirst/v1/apis/score-file \
               -o score.json
          echo "#### Resultado bruto" >> $GITHUB_STEP_SUMMARY
          cat score.json >> $GITHUB_STEP_SUMMARY
          # extraemos la nota global (por ejemplo "A", "B+"...)
          GRADE=$(jq -r '.overallGrade // .grade // empty' score.json)
          echo "Overall grade: ${GRADE:-desconocida}"
          echo "grade=${GRADE}" >> $GITHUB_OUTPUT

      # 5) Publicamos score.json como artefacto
      - name: Upload score
        uses: actions/upload-artifact@v4
        with:
          name: api-score
          path: score.json

      # 6) Paramos y limpiamos los contenedores
      - name: Tear-down scoring engine
        if: always()
        working-directory: scoring_engine
        run: docker-compose down